package com.zerox.from2201to2400

/**
 * @author zhuxi
 * @since 2022/7/25 11:25
 * @note
 * 2302. 统计得分小于 K 的子数组数目 | 难度：困难 | 标签：数组、二分查找、前缀和、滑动窗口
 * 一个数字的 分数 定义为数组之和 乘以 数组的长度。
 *
 * 比方说，[1, 2, 3, 4, 5] 的分数为 (1 + 2 + 3 + 4 + 5) * 5 = 75 。
 * 给你一个正整数数组 nums 和一个整数 k ，请你返回 nums 中分数 严格小于 k 的 非空整数子数组数目。
 *
 * 子数组 是数组中的一个连续元素序列。
 *
 * 示例 1：
 * 输入：nums = [2,1,4,3,5], k = 10
 * 输出：6
 * 解释：
 * 有 6 个子数组的分数小于 10 ：
 * - [2] 分数为 2 * 1 = 2 。
 * - [1] 分数为 1 * 1 = 1 。
 * - [4] 分数为 4 * 1 = 4 。
 * - [3] 分数为 3 * 1 = 3 。
 * - [5] 分数为 5 * 1 = 5 。
 * - [2,1] 分数为 (2 + 1) * 2 = 6 。
 * 注意，子数组 [1,4] 和 [4,3,5] 不符合要求，因为它们的分数分别为 10 和 36，但我们要求子数组的分数严格小于 10 。
 *
 * 示例 2：
 * 输入：nums = [1,1,1], k = 5
 * 输出：5
 * 解释：
 * 除了 [1,1,1] 以外每个子数组分数都小于 5 。
 * [1,1,1] 分数为 (1 + 1 + 1) * 3 = 9 ，大于 5 。
 * 所以总共有 5 个子数组得分小于 5 。
 *
 * 提示：
 * 1 <= nums.length <= 105
 * 1 <= nums[i] <= 105
 * 1 <= k <= 1015
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode.cn/problems/count-subarrays-with-score-less-than-k
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
object Solution2302 {
  /**
   * 执行用时：924 ms, 在所有 Scala 提交中击败了 50.00% 的用户
   * 内存消耗：74.7 MB, 在所有 Scala 提交中击败了 100.00% 的用户
   * 通过测试用例：167 / 167
   *
   * @param nums
   * @param k
   * @return
   */
  def countSubarrays(nums: Array[Int], k: Long): Long = {
    var sum = 0L
    var ans = 0L
    var l = 0
    for (r <- nums.indices) {
      sum += nums(r)
      while (sum * (r - l + 1) >= k) {
        sum -= nums(l)
        l += 1
      }
      ans += r - l + 1
    }
    ans
  }
}
